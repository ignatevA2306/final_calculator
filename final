//xaml

<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="05-306" Height="550" Width="350">
    <Grid  Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="70"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <TextBox x:Name="Screen" Grid.ColumnSpan="4" FontSize="36" TextAlignment="Right" VerticalContentAlignment="Center" Margin="5" IsReadOnly="True" Text="0"/>

        <!-- Первый ряд -->
        <Button Content="C" Grid.Column="0" Grid.Row="1" FontSize="30" Click="ClicSign" Margin="5" Background="#FFDDDDDD"/>
        <Button Content="←" Grid.Column="1" Grid.Row="1" FontSize="30" Click="ClicSign" Margin="5" Background="#FFDDDDDD"/>
        <Button Content="+/-" Grid.Column="2" Grid.Row="1" FontSize="30" Click="ChangeSign" Margin="5" Background="#FFDDDDDD"/>
        <Button Content="/" Grid.Column="3" Grid.Row="1" FontSize="30" Click="ClicSign" Margin="5" Background="#FFDDDDDD"/>

        <!-- Второй ряд -->
        <Button Content="7" Grid.Column="0" Grid.Row="2" FontSize="30" Click="OnClick" Margin="5"/>
        <Button Content="8" Grid.Column="1" Grid.Row="2" FontSize="30" Click="OnClick" Margin="5"/>
        <Button Content="9" Grid.Column="2" Grid.Row="2" FontSize="30" Click="OnClick" Margin="5"/>
        <Button Content="*" Grid.Column="3" Grid.Row="2" FontSize="30" Click="ClicSign" Margin="5" Background="#FFDDDDDD"/>

        <!-- Третий ряд -->
        <Button Content="4" Grid.Column="0" Grid.Row="3" FontSize="30" Click="OnClick" Margin="5"/>
        <Button Content="5" Grid.Column="1" Grid.Row="3" FontSize="30" Click="OnClick" Margin="5"/>
        <Button Content="6" Grid.Column="2" Grid.Row="3" FontSize="30" Click="OnClick" Margin="5"/>
        <Button Content="-" Grid.Column="3" Grid.Row="3" FontSize="30" Click="ClicSign" Margin="5" Background="#FFDDDDDD"/>

        <!-- Четвертый ряд -->
        <Button Content="1" Grid.Column="0" Grid.Row="4" FontSize="30" Click="OnClick" Margin="5"/>
        <Button Content="2" Grid.Column="1" Grid.Row="4" FontSize="30" Click="OnClick" Margin="5"/>
        <Button Content="3" Grid.Column="2" Grid.Row="4" FontSize="30" Click="OnClick" Margin="5"/>
        <Button Content="+" Grid.Column="3" Grid.Row="4" FontSize="30" Click="ClicSign" Margin="5" Background="#FFDDDDDD"/>

        <!-- Пятый ряд -->
        <Button Content="0" Grid.Column="0" Grid.Row="5" FontSize="30" Click="OnClick" Margin="5" Grid.ColumnSpan="2"/>
        <Button Content="." Grid.Column="2" Grid.Row="5" FontSize="30" Click="OnClick" Margin="5"/>
        <Button Content="=" Grid.Column="3" Grid.Row="5" FontSize="30" Click="ClicSign" Margin="5" Background="#FFDDDDDD"/>
    </Grid>
</Window>




//xaml.cs

using System;
using System.Collections.Generic;
using System.Globalization;
using System.Windows;
using System.Windows.Controls;

namespace WpfApp1
{
    public partial class MainWindow : Window
    {
        private List<float> numbers = new List<float>();
        private List<string> operations = new List<string>();
        private bool operationClicked = false;

        public MainWindow()
        {
            InitializeComponent();
        }

        private void OnClick(object sender, RoutedEventArgs e)
        {
            Button button = (Button)sender;
            string content = button.Content.ToString();

            if (operationClicked)
            {
                Screen.Text = content;
                operationClicked = false;
            }
            else
            {
                if (content == ".")
                {
                    if (!Screen.Text.Contains("."))
                    {
                        Screen.Text = Screen.Text == "0" ? "0." : Screen.Text + ".";
                    }
                }
                else
                {
                    Screen.Text = Screen.Text == "0" ? content : Screen.Text + content;
                }
            }
        }

        private void ClicSign(object sender, RoutedEventArgs e)
        {
            Button button = (Button)sender;
            string sign = button.Content.ToString();

            switch (sign)
            {
                case "C":
                    Clear();
                    break;
                case "←":
                    Backspace();
                    break;
                case "+":
                case "-":
                case "*":
                case "/":
                    PerformOperation(sign);
                    break;
                case "=":
                    Result();
                    break;
            }
        }

        private void ChangeSign(object sender, RoutedEventArgs e)
        {
            if (Screen.Text != "0")
            {
                if (Screen.Text.StartsWith("-"))
                {
                    Screen.Text = Screen.Text.Substring(1);
                }
                else
                {
                    Screen.Text = "-" + Screen.Text;
                }
            }
        }

        private void PerformOperation(string operation)
        {
            if (float.TryParse(Screen.Text, NumberStyles.Float, CultureInfo.InvariantCulture, out float number))
            {
                numbers.Add(number);
                operations.Add(operation);
                operationClicked = true;
            }
            else
            {
                Screen.Text = "Ошибка ввода";
            }
        }

        private void Result()
        {
            if (float.TryParse(Screen.Text, NumberStyles.Float, CultureInfo.InvariantCulture, out float number))
            {
                numbers.Add(number);
            }
            else
            {
                Screen.Text = "Ошибка ввода";
                return;
            }

            while (operations.Contains("*") || operations.Contains("/"))
            {
                int indexMult = operations.IndexOf("*");
                int indexDiv = operations.IndexOf("/");

                int operationIndex;
                if (indexMult == -1)
                {
                    operationIndex = indexDiv;
                }
                else if (indexDiv == -1)
                {
                    operationIndex = indexMult;
                }
                else
                {
                    operationIndex = Math.Min(indexMult, indexDiv);
                }

                float result = ApplyOperation(numbers[operationIndex], numbers[operationIndex + 1], operations[operationIndex]);
                numbers[operationIndex] = result;
                numbers.RemoveAt(operationIndex + 1);
                operations.RemoveAt(operationIndex);
            }

            float finalResult = numbers[0];
            for (int i = 0; i < operations.Count; i++)
            {
                finalResult = ApplyOperation(finalResult, numbers[i + 1], operations[i]);
            }

            Screen.Text = finalResult.ToString(CultureInfo.InvariantCulture);
            ClearData();
        }

        private float ApplyOperation(float a, float b, string operation)
        {
            switch (operation)
            {
                case "+":
                    return a + b;
                case "-":
                    return a - b;
                case "*":
                    return a * b;
                case "/":
                    if (b == 0)
                    {
                        Screen.Text = "Деление на ноль!";
                        return 0;
                    }
                    return a / b;
                default:
                    return b;
            }
        }

        private void Clear()
        {
            Screen.Text = "0";
            ClearData();
        }

        private void Backspace()
        {
            if (!string.IsNullOrEmpty(Screen.Text))
            {
                Screen.Text = Screen.Text.Length == 1 ? "0" : Screen.Text.Substring(0, Screen.Text.Length - 1);
            }
        }

        private void ClearData()
        {
            numbers.Clear();
            operations.Clear();
            operationClicked = false;
        }
    }
}
